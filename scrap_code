#def draw_board():
#     screen.fill(WHITE)

#     # Display the center tile
#     center_text = font.render(center_tile, True, BLACK)
#     center_text_rect = center_text.get_rect(center=(center_x, center_y))
#     screen.blit(center_text, center_text_rect)

#     # Draw hexagons centered around each outside letter
#     hexagon_radius = 100  # Adjust the radius as needed
#     for i, letter in enumerate(outside_tiles):
#         angle = math.radians(60 * i)  # 60 degrees apart
#         x_center = center_x + (circle_radius + 5) * math.cos(angle)  # Add 5 for the separation
#         y_center = center_y + (circle_radius + 5) * math.sin(angle)

#         # Calculate the vertices of the hexagon
#         hexagon_vertices = []
#         for j in range(6):
#             vertex_x = x_center + hexagon_radius * math.cos(math.radians(60 * j))
#             vertex_y = y_center + hexagon_radius * math.sin(math.radians(60 * j))
#             hexagon_vertices.append((vertex_x, vertex_y))

#         # Draw the hexagon
#         pygame.draw.polygon(screen, (173, 216, 230), hexagon_vertices)  # Light Blue Hexagon

# # Display letters around the center
#     for i, letter in enumerate(outside_tiles):
#         angle = math.radians(i * angle_increment)
#         x = center_x + (circle_radius+5) * math.cos(angle)
#         y = center_y + (circle_radius+5) * math.sin(angle)
        
#         text = font.render(letter, True, BLACK)
#         text_rect = text.get_rect(center=(x, y))
#         screen.blit(text, text_rect)

#     # Draw the input box
#     pygame.draw.rect(screen, input_color, input_box, 2)
#     input_surface = font.render(input_text, True, BLACK)
#     screen.blit(input_surface, (input_box.x + 5, input_box.y + 5))

#     # Display correct words
#     for i, word in enumerate(correct_words):
#         word_text = font.render(word, True, BLACK)
#         word_rect = word_text.get_rect(
#             x=correct_words_x, y=correct_words_y + i * correct_words_spacing
#         )
#         screen.blit(word_text, word_rect)

# def main():
#     global input_text
#     global input_active

#     running = True

#     while running:
#         for event in pygame.event.get():
#             if event.type == pygame.QUIT:
#                 running = False
#             elif event.type == pygame.MOUSEBUTTONDOWN:
#                 if input_box.collidepoint(event.pos):
#                     input_active = True
#                 else:
#                     input_active = False
#             elif event.type == pygame.KEYDOWN:
#                 if input_active:
#                     if event.key == pygame.K_RETURN:
#                         # Process the word when the user presses Enter
#                         print(f"Entered word: {input_text}")
#                         if input_text in filtered_words_with_valid_letters:
#                             correct_words.append(input_text)
#                             correct_words.sort()
#                             print(correct_words)
#                         input_text = ""  # Clear the current word
#                     elif event.key == pygame.K_BACKSPACE:
#                         # Remove the last character when the user presses Backspace
#                         input_text = input_text[:-1]
#                     elif event.unicode.isalpha() and event.unicode in letter_list:
#                         # Add valid characters to the current word
#                         input_text += event.unicode

#         draw_board()
#         pygame.display.flip()

#     pygame.quit()
#     sys.exit()

# if __name__ == "__main__":
#     main()